services:

  chromadb:
    build:
      context: .
      dockerfile: Dockerfile.chromadb
    container_name: chromadb
    ports:
      - "8000:8000"
    volumes:
      - chroma-data:/chroma
    restart: unless-stopped

  whfr-base:
    build:
      context: .
      dockerfile: Dockerfile.base
    image: whfr-base:latest


  ingest-runner:
    build:
      context: ./ingest-runner
    container_name: ingest-runner
    image: whfr_ingest-runner
    volumes:
      - ./shared:/shared
      - pip-cache:/root/.cache/pip
    environment:
      - CHROMA_HOST=chromadb
      - CHROMA_PORT=8000
    depends_on:
      - ocr-helper
      - chromadb
      - whfr-base

  ocr-helper:
    build:
      context: ./ocr-helper
    image: whfr-ocr-helper
    deploy:
      resources:
        reservations:
          devices:
            - driver: nvidia
              capabilities: [gpu]
    container_name: ocr-helper
    depends_on:
      - ollama
      - whfr-base
    volumes:
      - ./shared:/shared
      - pip-cache:/root/.cache/pip
    restart: unless-stopped

  ollama:
    build:
      context: .
      dockerfile: Dockerfile.ollama
    container_name: ollama
    runtime: nvidia
    environment:
      - NVIDIA_VISIBLE_DEVICES=all
    volumes:
      - ollama_models:/root/.ollama
    ports:
      - "11434:11434"
    restart: always

  rag-api:
    build:
      context: ./rag-api
    ports:
      - "5050:5050"
    environment:
      - CHROMA_HOST=chromadb
      - CHROMA_PORT=8000
      - CHROMA_URL=http://chromadb:8000
    depends_on:
      - chromadb
      - ollama
      - whfr-base
    restart: always

  viewer-api:
    build:
      context: ./viewer-api
    container_name: viewer-api
    ports:
      - "5051:5051"
    volumes:
      - ./shared:/app/shared
    command: uvicorn main:app --host 0.0.0.0 --port 5051 --reload
    restart: unless-stopped


  openwebui:
    image: ghcr.io/open-webui/open-webui:main
    container_name: openwebui
    environment:
      - OLLAMA_API_BASE_URL=http://ollama:11434
    ports:
      - "3000:8080"
    depends_on:
      - ollama
      - chromadb
    restart: always

volumes:
  chroma-data:
  ollama_models:
  pip-cache:
